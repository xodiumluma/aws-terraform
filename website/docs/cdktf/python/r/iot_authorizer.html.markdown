---
subcategory: "IoT Core"
layout: "aws"
page_title: "AWS: aws_iot_authorizer"
description: |-
    Creates and manages an AWS IoT Authorizer.
---


<!-- Please do not edit this file, it is generated. -->
# Resource: aws_iot_authorizer

Creates and manages an AWS IoT Authorizer.

## Example Usage

```python
# DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
from constructs import Construct
from cdktf import Token, Fn, TerraformStack
#
# Provider bindings are generated by running `cdktf get`.
# See https://cdk.tf/provider-generation for more details.
#
from imports.aws.iot_authorizer import IotAuthorizer
class MyConvertedCode(TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        IotAuthorizer(self, "example",
            authorizer_function_arn=Token.as_string(aws_lambda_function_example.arn),
            name="example",
            signing_disabled=False,
            status="ACTIVE",
            token_key_name="Token-Header",
            token_signing_public_keys={
                "Key1": Token.as_string(
                    Fn.file("test-fixtures/iot-authorizer-signing-key.pem"))
            }
        )
```

## Argument Reference

* `authorizer_function_arn` - (Required) The ARN of the authorizer's Lambda function.
* `enable_caching_for_http`  - (Optional) Specifies whether the HTTP caching is enabled or not. Default: `false`.
* `name` - (Required) The name of the authorizer.
* `signing_disabled` - (Optional) Specifies whether AWS IoT validates the token signature in an authorization request. Default: `false`.
* `status` - (Optional) The status of Authorizer request at creation. Valid values: `ACTIVE`, `INACTIVE`. Default: `ACTIVE`.
* `token_key_name` - (Optional) The name of the token key used to extract the token from the HTTP headers. This value is required if signing is enabled in your authorizer.
* `token_signing_public_keys` - (Optional) The public keys used to verify the digital signature returned by your custom authentication service. This value is required if signing is enabled in your authorizer.

## Attribute Reference

This resource exports the following attributes in addition to the arguments above:

* `arn` - The ARN of the authorizer.

## Import

In Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import IOT Authorizers using the name. For example:

```python
# DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
from constructs import Construct
from cdktf import TerraformStack
class MyConvertedCode(TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
```

Using `terraform import`, import IOT Authorizers using the name. For example:

```console
% terraform import aws_iot_authorizer.example example
```

<!-- cache-key: cdktf-0.19.0 input-cf8f96f38c8639fbcddf19f56615da17a9607ba975bea77bb2b1ea3d089fe7c3 -->