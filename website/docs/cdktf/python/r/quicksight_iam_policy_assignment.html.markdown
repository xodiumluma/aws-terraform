---
subcategory: "QuickSight"
layout: "aws"
page_title: "AWS: aws_quicksight_iam_policy_assignment"
description: |-
  Terraform resource for managing an AWS QuickSight IAM Policy Assignment.
---


<!-- Please do not edit this file, it is generated. -->
# Resource: aws_quicksight_iam_policy_assignment

Terraform resource for managing an AWS QuickSight IAM Policy Assignment.

## Example Usage

### Basic Usage

```python
# DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
from constructs import Construct
from cdktf import Token, TerraformStack
#
# Provider bindings are generated by running `cdktf get`.
# See https://cdk.tf/provider-generation for more details.
#
from imports.aws.quicksight_iam_policy_assignment import QuicksightIamPolicyAssignment
class MyConvertedCode(TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        QuicksightIamPolicyAssignment(self, "example",
            assignment_name="example",
            assignment_status="ENABLED",
            identities=[QuicksightIamPolicyAssignmentIdentities(
                user=[Token.as_string(aws_quicksight_user_example.user_name)]
            )
            ],
            policy_arn=Token.as_string(aws_iam_policy_example.arn)
        )
```

## Argument Reference

The following arguments are required:

* `assignment_name` - (Required) Name of the assignment.
* `assignment_status` - (Required) Status of the assignment. Valid values are `ENABLED`, `DISABLED`, and `DRAFT`.

The following arguments are optional:

* `aws_account_id` - (Optional) AWS account ID.
* `identities` - (Optional) Amazon QuickSight users, groups, or both to assign the policy to. See [`identities`](#identities).
* `namespace` - (Optional) Namespace that contains the assignment. Defaults to `default`.
* `policy_arn` - (Optional) ARN of the IAM policy to apply to the Amazon QuickSight users and groups specified in this assignment.

### identities

* `groups` - (Optional) Array of Quicksight group names to assign the policy to.
* `user` - (Optional) Array of Quicksight user names to assign the policy to.

## Attribute Reference

This resource exports the following attributes in addition to the arguments above:

* `assignment_id` - Assignment ID.
* `id` - A comma-delimited string joining AWS account ID, namespace, and assignment name.

## Import

In Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import QuickSight IAM Policy Assignment using the AWS account ID, namespace, and assignment name separated by commas (`,`). For example:

```python
# DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
from constructs import Construct
from cdktf import TerraformStack
class MyConvertedCode(TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
```

Using `terraform import`, import QuickSight IAM Policy Assignment using the AWS account ID, namespace, and assignment name separated by commas (`,`). For example:

```console
% terraform import aws_quicksight_iam_policy_assignment.example 123456789012,default,example
```

<!-- cache-key: cdktf-0.19.0 input-ef52d922a126d93b554f19d053cc37acca38aa991f703b223e6f2532c3d630d9 -->