---
subcategory: "IAM (Identity & Access Management)"
layout: "aws"
page_title: "AWS: aws_iam_user_policy"
description: |-
  Provides an IAM policy attached to a user.
---


<!-- Please do not edit this file, it is generated. -->
# Resource: aws_iam_user_policy

Provides an IAM policy attached to a user.

## Example Usage

```python
# DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
from constructs import Construct
from cdktf import Fn, Token, TerraformStack
#
# Provider bindings are generated by running `cdktf get`.
# See https://cdk.tf/provider-generation for more details.
#
from imports.aws.iam_access_key import IamAccessKey
from imports.aws.iam_user import IamUser
from imports.aws.iam_user_policy import IamUserPolicy
class MyConvertedCode(TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        lb = IamUser(self, "lb",
            name="loadbalancer",
            path="/system/"
        )
        IamUserPolicy(self, "lb_ro",
            name="test",
            policy=Token.as_string(
                Fn.jsonencode({
                    "Statement": [{
                        "Action": ["ec2:Describe*"],
                        "Effect": "Allow",
                        "Resource": "*"
                    }
                    ],
                    "Version": "2012-10-17"
                })),
            user=lb.name
        )
        aws_iam_access_key_lb = IamAccessKey(self, "lb_2",
            user=lb.name
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        aws_iam_access_key_lb.override_logical_id("lb")
```

## Argument Reference

This resource supports the following arguments:

* `policy` - (Required) The policy document. This is a JSON formatted string. For more information about building AWS IAM policy documents with Terraform, see the [AWS IAM Policy Document Guide](https://learn.hashicorp.com/terraform/aws/iam-policy).
* `name` - (Optional) The name of the policy. If omitted, Terraform will assign a random, unique name.
* `name_prefix` - (Optional, Forces new resource) Creates a unique name beginning with the specified prefix. Conflicts with `name`.
* `user` - (Required) IAM user to which to attach this policy.

## Attribute Reference

This resource exports the following attributes in addition to the arguments above:

* `id` - The user policy ID, in the form of `user_name:user_policy_name`.
* `name` - The name of the policy (always set).

## Import

In Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import IAM User Policies using the `user_name:user_policy_name`. For example:

```python
# DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
from constructs import Construct
from cdktf import TerraformStack
class MyConvertedCode(TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
```

Using `terraform import`, import IAM User Policies using the `user_name:user_policy_name`. For example:

```console
% terraform import aws_iam_user_policy.mypolicy user_of_mypolicy_name:mypolicy_name
```

<!-- cache-key: cdktf-0.19.0 input-0e7d9174e258c37b6b2bfd4094bb5d0f358c81bf66ad2ec394e1153843121ade -->