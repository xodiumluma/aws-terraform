---
subcategory: "MemoryDB for Redis"
layout: "aws"
page_title: "AWS: aws_memorydb_user"
description: |-
  Provides a MemoryDB User.
---


<!-- Please do not edit this file, it is generated. -->
# Resource: aws_memorydb_user

Provides a MemoryDB User.

More information about users and ACL-s can be found in the [MemoryDB User Guide](https://docs.aws.amazon.com/memorydb/latest/devguide/clusters.acls.html).

~> **Note:** All arguments including the username and passwords will be stored in the raw state as plain-text.
[Read more about sensitive data in state](https://www.terraform.io/docs/state/sensitive-data.html).

## Example Usage

```python
# DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
from constructs import Construct
from cdktf import Token, TerraformStack
#
# Provider bindings are generated by running `cdktf get`.
# See https://cdk.tf/provider-generation for more details.
#
from imports.aws.memorydb_user import MemorydbUser
from imports.random.password import Password
class MyConvertedCode(TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        # The following providers are missing schema information and might need manual adjustments to synthesize correctly: random.
        #     For a more precise conversion please use the --provider flag in convert.
        example = Password(self, "example",
            length=16
        )
        aws_memorydb_user_example = MemorydbUser(self, "example_1",
            access_string="on ~* &* +@all",
            authentication_mode=MemorydbUserAuthenticationMode(
                passwords=[Token.as_string(example.result)],
                type="password"
            ),
            user_name="my-user"
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        aws_memorydb_user_example.override_logical_id("example")
```

## Argument Reference

The following arguments are required:

* `access_string` - (Required) The access permissions string used for this user.
* `authentication_mode` - (Required) Denotes the user's authentication properties. Detailed below.
* `user_name` - (Required, Forces new resource) Name of the MemoryDB user. Up to 40 characters.

The following arguments are optional:

* `tags` - (Optional) A map of tags to assign to the resource. If configured with a provider [`default_tags` configuration block](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#default_tags-configuration-block) present, tags with matching keys will overwrite those defined at the provider-level.

### authentication_mode Configuration Block

* `passwords` - (Required) The set of passwords used for authentication. You can create up to two passwords for each user.
* `type` - (Required) Indicates whether the user requires a password to authenticate. Must be set to `password`.

## Attribute Reference

This resource exports the following attributes in addition to the arguments above:

* `id` - Same as `user_name`.
* `arn` - The ARN of the user.
* `minimum_engine_version` - The minimum engine version supported for the user.
* `authentication_mode` configuration block
    * `password_count` - The number of passwords belonging to the user.
* `tags_all` - A map of tags assigned to the resource, including those inherited from the provider [`default_tags` configuration block](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#default_tags-configuration-block).

## Import

In Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import a user using the `user_name`. For example:

```python
# DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
from constructs import Construct
from cdktf import TerraformStack
class MyConvertedCode(TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
```

Using `terraform import`, import a user using the `user_name`. For example:

```console
% terraform import aws_memorydb_user.example my-user
```

The `passwords` are not available for imported resources, as this information cannot be read back from the MemoryDB API.

<!-- cache-key: cdktf-0.19.0 input-f5d027129bff54db7aaaaecf18b5e8da10653dddeb0e00e2f474bf78aa1508d7 -->