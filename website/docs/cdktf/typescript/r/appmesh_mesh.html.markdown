---
subcategory: "App Mesh"
layout: "aws"
page_title: "AWS: aws_appmesh_mesh"
description: |-
  Provides an AWS App Mesh service mesh resource.
---


<!-- Please do not edit this file, it is generated. -->
# Resource: aws_appmesh_mesh

Provides an AWS App Mesh service mesh resource.

## Example Usage

### Basic

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { AppmeshMesh } from "./.gen/providers/aws/appmesh-mesh";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    new AppmeshMesh(this, "simple", {
      name: "simpleapp",
    });
  }
}

```

### Egress Filter

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { AppmeshMesh } from "./.gen/providers/aws/appmesh-mesh";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    new AppmeshMesh(this, "simple", {
      name: "simpleapp",
      spec: {
        egressFilter: {
          type: "ALLOW_ALL",
        },
      },
    });
  }
}

```

## Argument Reference

This resource supports the following arguments:

* `name` - (Required) Name to use for the service mesh. Must be between 1 and 255 characters in length.
* `spec` - (Optional) Service mesh specification to apply.
* `tags` - (Optional) Map of tags to assign to the resource. If configured with a provider [`default_tags` configuration block](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#default_tags-configuration-block) present, tags with matching keys will overwrite those defined at the provider-level.

The `spec` object supports the following:

* `egressFilter`- (Optional) Egress filter rules for the service mesh.

The `egressFilter` object supports the following:

* `type` - (Optional) Egress filter type. By default, the type is `DROP_ALL`.
Valid values are `ALLOW_ALL` and `DROP_ALL`.

## Attribute Reference

This resource exports the following attributes in addition to the arguments above:

* `id` - ID of the service mesh.
* `arn` - ARN of the service mesh.
* `createdDate` - Creation date of the service mesh.
* `lastUpdatedDate` - Last update date of the service mesh.
* `meshOwner` - AWS account ID of the service mesh's owner.
* `resourceOwner` - Resource owner's AWS account ID.
* `tagsAll` - Map of tags assigned to the resource, including those inherited from the provider [`default_tags` configuration block](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#default_tags-configuration-block).

## Import

In Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import App Mesh service meshes using the `name`. For example:

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { TerraformStack } from "cdktf";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
  }
}

```

Using `terraform import`, import App Mesh service meshes using the `name`. For example:

```console
% terraform import aws_appmesh_mesh.simple simpleapp
```

<!-- cache-key: cdktf-0.19.0 input-3173e5025bf46613bb3d81fd897c112506cd0123d7fe3d3c9ffea66ee2187a85 -->