---
subcategory: "Cognito IDP (Identity Provider)"
layout: "aws"
page_title: "AWS: aws_cognito_resource_server"
side_bar_current: "docs-aws-resource-cognito-resource-server"
description: |-
  Provides a Cognito Resource Server.
---


<!-- Please do not edit this file, it is generated. -->
# Resource: aws_cognito_resource_server

Provides a Cognito Resource Server.

## Example Usage

### Create a basic resource server

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { CognitoResourceServer } from "./.gen/providers/aws/cognito-resource-server";
import { CognitoUserPool } from "./.gen/providers/aws/cognito-user-pool";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    const pool = new CognitoUserPool(this, "pool", {
      name: "pool",
    });
    new CognitoResourceServer(this, "resource", {
      identifier: "https://example.com",
      name: "example",
      userPoolId: pool.id,
    });
  }
}

```

### Create a resource server with sample-scope

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { CognitoResourceServer } from "./.gen/providers/aws/cognito-resource-server";
import { CognitoUserPool } from "./.gen/providers/aws/cognito-user-pool";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    const pool = new CognitoUserPool(this, "pool", {
      name: "pool",
    });
    new CognitoResourceServer(this, "resource", {
      identifier: "https://example.com",
      name: "example",
      scope: [
        {
          scopeDescription: "a Sample Scope Description",
          scopeName: "sample-scope",
        },
      ],
      userPoolId: pool.id,
    });
  }
}

```

## Argument Reference

This resource supports the following arguments:

* `identifier` - (Required) An identifier for the resource server.
* `name` - (Required) A name for the resource server.
* `scope` - (Optional) A list of [Authorization Scope](#authorization-scope).

### Authorization Scope

* `scopeName` - (Required) The scope name.
* `scopeDescription` - (Required) The scope description.

## Attribute Reference

This resource exports the following attributes in addition to the arguments above:

* `scopeIdentifiers` - A list of all scopes configured for this resource server in the format identifier/scope_name.

## Import

In Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import `awsCognitoResourceServer` using their User Pool ID and Identifier. For example:

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { TerraformStack } from "cdktf";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
  }
}

```

Using `terraform import`, import `awsCognitoResourceServer` using their User Pool ID and Identifier. For example:

```console
% terraform import aws_cognito_resource_server.example "us-west-2_abc123|https://example.com"
```

<!-- cache-key: cdktf-0.19.0 input-de46a7a41e5a457b2e40bf3acab26f989ff8b0291a8fbbdd80d28397469c06a7 -->