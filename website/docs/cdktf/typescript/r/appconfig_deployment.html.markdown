---
subcategory: "AppConfig"
layout: "aws"
page_title: "AWS: aws_appconfig_deployment"
description: |-
  Provides an AppConfig Deployment resource.
---


<!-- Please do not edit this file, it is generated. -->
# Resource: aws_appconfig_deployment

Provides an AppConfig Deployment resource for an [`awsAppconfigApplication` resource](appconfig_application.html.markdown).

## Example Usage

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { Token, TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { AppconfigDeployment } from "./.gen/providers/aws/appconfig-deployment";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    new AppconfigDeployment(this, "example", {
      applicationId: Token.asString(awsAppconfigApplicationExample.id),
      configurationProfileId: Token.asString(
        awsAppconfigConfigurationProfileExample.configurationProfileId
      ),
      configurationVersion: Token.asString(
        awsAppconfigHostedConfigurationVersionExample.versionNumber
      ),
      deploymentStrategyId: Token.asString(
        awsAppconfigDeploymentStrategyExample.id
      ),
      description: "My example deployment",
      environmentId: Token.asString(
        awsAppconfigEnvironmentExample.environmentId
      ),
      tags: {
        Type: "AppConfig Deployment",
      },
    });
  }
}

```

## Argument Reference

This resource supports the following arguments:

* `applicationId` - (Required, Forces new resource) Application ID. Must be between 4 and 7 characters in length.
* `configurationProfileId` - (Required, Forces new resource) Configuration profile ID. Must be between 4 and 7 characters in length.
* `configurationVersion` - (Required, Forces new resource) Configuration version to deploy. Can be at most 1024 characters.
* `deploymentStrategyId` - (Required, Forces new resource) Deployment strategy ID or name of a predefined deployment strategy. See [Predefined Deployment Strategies](https://docs.aws.amazon.com/appconfig/latest/userguide/appconfig-creating-deployment-strategy.html#appconfig-creating-deployment-strategy-predefined) for more details.
* `description` - (Optional, Forces new resource) Description of the deployment. Can be at most 1024 characters.
* `environmentId` - (Required, Forces new resource) Environment ID. Must be between 4 and 7 characters in length.
* `tags` - (Optional) Map of tags to assign to the resource. If configured with a provider [`default_tags` configuration block](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#default_tags-configuration-block) present, tags with matching keys will overwrite those defined at the provider-level.

## Attribute Reference

This resource exports the following attributes in addition to the arguments above:

* `id` - AppConfig application ID, environment ID, and deployment number separated by a slash (`/`).
* `arn` - ARN of the AppConfig Deployment.
* `deploymentNumber` - Deployment number.
* `state` - State of the deployment.
* `tagsAll` - Map of tags assigned to the resource, including those inherited from the provider [`default_tags` configuration block](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#default_tags-configuration-block).

## Import

In Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import AppConfig Deployments using the application ID, environment ID, and deployment number separated by a slash (`/`). For example:

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { TerraformStack } from "cdktf";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
  }
}

```

Using `terraform import`, import AppConfig Deployments using the application ID, environment ID, and deployment number separated by a slash (`/`). For example:

```console
% terraform import aws_appconfig_deployment.example 71abcde/11xxxxx/1
```

<!-- cache-key: cdktf-0.19.0 input-39d098aa9ae0c1f1d4eeeee8bc2060587e9cc2e856acbf07eef391aa67bc2054 -->