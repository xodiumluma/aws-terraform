---
subcategory: "ECR (Elastic Container Registry)"
layout: "aws"
page_title: "AWS: aws_ecr_registry_policy"
description: |-
  Provides an Elastic Container Registry Policy.
---


<!-- Please do not edit this file, it is generated. -->
# Resource: aws_ecr_registry_policy

Provides an Elastic Container Registry Policy.

## Example Usage

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { Fn, Token, TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { DataAwsCallerIdentity } from "./.gen/providers/aws/data-aws-caller-identity";
import { DataAwsPartition } from "./.gen/providers/aws/data-aws-partition";
import { DataAwsRegion } from "./.gen/providers/aws/data-aws-region";
import { EcrRegistryPolicy } from "./.gen/providers/aws/ecr-registry-policy";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    const current = new DataAwsCallerIdentity(this, "current", {});
    const dataAwsPartitionCurrent = new DataAwsPartition(this, "current_1", {});
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    dataAwsPartitionCurrent.overrideLogicalId("current");
    const dataAwsRegionCurrent = new DataAwsRegion(this, "current_2", {});
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    dataAwsRegionCurrent.overrideLogicalId("current");
    new EcrRegistryPolicy(this, "example", {
      policy: Token.asString(
        Fn.jsonencode({
          Statement: [
            {
              Action: ["ecr:ReplicateImage"],
              Effect: "Allow",
              Principal: {
                AWS:
                  "arn:${" +
                  dataAwsPartitionCurrent.partition +
                  "}:iam::${" +
                  current.accountId +
                  "}:root",
              },
              Resource: [
                "arn:${" +
                  dataAwsPartitionCurrent.partition +
                  "}:ecr:${" +
                  dataAwsRegionCurrent.name +
                  "}:${" +
                  current.accountId +
                  "}:repository/*",
              ],
              Sid: "testpolicy",
            },
          ],
          Version: "2012-10-17",
        })
      ),
    });
  }
}

```

## Argument Reference

This resource supports the following arguments:

* `policy` - (Required) The policy document. This is a JSON formatted string. For more information about building IAM policy documents with Terraform, see the [AWS IAM Policy Document Guide](https://learn.hashicorp.com/terraform/aws/iam-policy)

## Attribute Reference

This resource exports the following attributes in addition to the arguments above:

* `registryId` - The registry ID where the registry was created.

## Import

In Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import ECR Registry Policy using the registry id. For example:

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { TerraformStack } from "cdktf";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
  }
}

```

Using `terraform import`, import ECR Registry Policy using the registry id. For example:

```console
% terraform import aws_ecr_registry_policy.example 123456789012
```

<!-- cache-key: cdktf-0.19.0 input-a8b9e1b12da0ab4f7f9e19fe22a9fd339fcf53514637769a293dcb91b039f9b6 -->